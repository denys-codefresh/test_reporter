<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1546962841905' stop='1546962841928'>
    <name>Badge controller unit tests Tests for public services Error badges handling</name>
    <title>Badge controller unit tests Tests for public services Error badges handling</title>
    <test-cases>
        <test-case start='1546962841905' status='passed' stop='1546962841907'>
            <name>Should handle an error when account return err and create invalid request badge</name>
            <title>Should handle an error when account return err and create invalid request badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841907' status='passed' stop='1546962841909'>
            <name>Should handle an error when account not found and create invalid request badge</name>
            <title>Should handle an error when account not found and create invalid request badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841909' status='passed' stop='1546962841911'>
            <name>Should handle an error when account not provided and create invalid request badge</name>
            <title>Should handle an error when account not provided and create invalid request badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841911' status='passed' stop='1546962841913'>
            <name>Should handle an error or pipeline not found  during getPipeline and then create pipeline not found badge</name>
            <title>Should handle an error or pipeline not found  during getPipeline and then create pipeline not found badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841913' status='passed' stop='1546962841916'>
            <name>Should handle an error or service not found during getService and then create service not found badge</name>
            <title>Should handle an error or service not found during getService and then create service not found badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841916' status='passed' stop='1546962841918'>
            <name>Should handle an error when requesting badge and return invalid request </name>
            <title>Should handle an error when requesting badge and return invalid request </title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841918' status='passed' stop='1546962841920'>
            <name>Should handle an error when BadgeBuild constructor throws an exeption</name>
            <title>Should handle an error when BadgeBuild constructor throws an exeption</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841920' status='passed' stop='1546962841925'>
            <name>Should handle an error when permission to service denied and create no permission badge</name>
            <title>Should handle an error when permission to service denied and create no permission badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841925' status='passed' stop='1546962841926'>
            <name>Should serve error badge</name>
            <title>Should serve error badge</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546962841927' status='passed' stop='1546962841928'>
            <name>Should serve error badge with default value</name>
            <title>Should serve error badge with default value</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
    </test-cases>
</ns2:test-suite>