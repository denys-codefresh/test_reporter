<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1546941776496' stop='1546941777008'>
    <name>Authentication Tests - Routes 1. Routing Tests</name>
    <title>Authentication Tests - Routes 1. Routing Tests</title>
    <test-cases>
        <test-case start='1546941776496' status='passed' stop='1546941776517'>
            <name>1.1 should respond with a redirect url for an existing provider</name>
            <title>1.1 should respond with a redirect url for an existing provider</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776518' status='passed' stop='1546941776528'>
            <name>1.2 should respond with 400 for a provider that does not exist</name>
            <title>1.2 should respond with 400 for a provider that does not exist</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776528' status='passed' stop='1546941776534'>
            <name>1.3 should respond with 404 for a a missing provider</name>
            <title>1.3 should respond with 404 for a a missing provider</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776534' status='passed' stop='1546941776669'>
            <name>1.4 should populate the req object with the user providing a valid accessToken</name>
            <title>1.4 should populate the req object with the user providing a valid accessToken</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776670' status='passed' stop='1546941776736'>
            <name>1.5 should populate the req object with the user providing a valid accessToken</name>
            <title>1.5 should populate the req object with the user providing a valid accessToken</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776736' status='passed' stop='1546941776743'>
            <name>1.6 should return 401 for a route needed authentication when token is not specified</name>
            <title>1.6 should return 401 for a route needed authentication when token is not specified</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776744' status='passed' stop='1546941776750'>
            <name>1.7 should return 401 for a route needed authentication when local token is not valid</name>
            <title>1.7 should return 401 for a route needed authentication when local token is not valid</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776750' status='passed' stop='1546941776758'>
            <name>1.8 should return 401 for a route needed authentication when local token is valid but user does not exist in database</name>
            <title>1.8 should return 401 for a route needed authentication when local token is valid but user does not exist in database</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776759' status='passed' stop='1546941776885'>
            <name>1.10 should return 307 for a route needed authentication when local token is valid but user has no user name</name>
            <title>1.10 should return 307 for a route needed authentication when local token is valid but user has no user name</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776886' status='passed' stop='1546941776894'>
            <name>1.11 should return 400 not existing user</name>
            <title>1.11 should return 400 not existing user</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1546941776894' status='passed' stop='1546941777007'>
            <name>1.12 should return 401 for SSO not configured for the user user</name>
            <title>1.12 should return 401 for SSO not configured for the user user</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
    </test-cases>
</ns2:test-suite>